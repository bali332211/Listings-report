postgres.host.name=${POSTGRES_HOSTNAME:localhost}
postgres.port.number=${POSTGRES_PORT:5432}
postgres.db.name=${POSTGRES_DB:listingsdb}
postgres.db.schema.name=${POSTGRES_SCHEMA:listingsdb}
postgres.user.name=${POSTGRES_USER:postgres}
postgres.user.password=${POSTGRES_PASSWORD:password}

spring.datasource.url=jdbc:postgresql://${postgres.host.name}:${postgres.port.number}/${postgres.db.name}?currentSchema=${postgres.db.schema.name}
spring.datasource.username=${postgres.user.name}
spring.datasource.password=${postgres.user.password}

spring.jackson.serialization.indent-output=true
spring.jackson.serialization.fail-on-empty-beans=false

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.hibernate.ddl-auto=create-drop

spring.flyway.url=${spring.datasource.url}
spring.flyway.schemas=${postgres.db.name}
spring.flyway.user=${postgres.user.name}
spring.flyway.password=${postgres.user.password}
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration

ftp.server=${FTP_SERVER:localhost}
ftp.port=${FTP_PORT:21}
ftp.user=${FTP_USER:bali}
ftp.password=${FTP_PASSWORD:password}

worldofbooks.api.key=63304c70
worldofbooks.ebay.name=EBAY
worldofbooks.amazon.name=AMAZON
